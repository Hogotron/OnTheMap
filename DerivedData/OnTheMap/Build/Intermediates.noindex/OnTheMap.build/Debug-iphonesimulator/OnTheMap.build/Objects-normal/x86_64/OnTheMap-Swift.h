// Generated by Apple Swift version 4.0.3 effective-3.2.3 (swiftlang-900.0.74.1 clang-900.0.39.2)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_attribute(external_source_symbol)
# define SWIFT_STRINGIFY(str) #str
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name) _Pragma(SWIFT_STRINGIFY(clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in=module_name, generated_declaration))), apply_to=any(function, enum, objc_interface, objc_category, objc_protocol))))
# define SWIFT_MODULE_NAMESPACE_POP _Pragma("clang attribute pop")
#else
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name)
# define SWIFT_MODULE_NAMESPACE_POP
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR __attribute__((enum_extensibility(open)))
# else
#  define SWIFT_ENUM_ATTR
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import UIKit;
@import MapKit;
@import ObjectiveC;
@import Foundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

SWIFT_MODULE_NAMESPACE_PUSH("OnTheMap")
@class UIActivityIndicatorView;
@class UITextField;
@class UIButton;
@class NSError;
@class UIStoryboardSegue;
@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC8OnTheMap25AddLocationViewController")
@interface AddLocationViewController : UIViewController <UITextFieldDelegate>
@property (nonatomic, strong) UIActivityIndicatorView * _Nonnull activityIndicator;
@property (nonatomic, weak) IBOutlet UITextField * _Null_unspecified locationTextField;
@property (nonatomic, weak) IBOutlet UITextField * _Null_unspecified websiteTextField;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified findLocationButton;
- (void)viewDidLoad;
- (IBAction)cancelPressed:(id _Nonnull)sender;
- (IBAction)findLocationPressed:(id _Nonnull)sender;
- (void)getLocationWithCompletionHandler:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completionHandler;
- (void)prepareForSegue:(UIStoryboardSegue * _Nonnull)segue sender:(id _Nullable)sender;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIWindow;
@class UIApplication;

SWIFT_CLASS("_TtC8OnTheMap11AppDelegate")
@interface AppDelegate : UIResponder <UIApplicationDelegate>
@property (nonatomic, strong) UIWindow * _Nullable window;
- (BOOL)application:(UIApplication * _Nonnull)application didFinishLaunchingWithOptions:(NSDictionary<UIApplicationLaunchOptionsKey, id> * _Nullable)launchOptions SWIFT_WARN_UNUSED_RESULT;
- (void)applicationWillResignActive:(UIApplication * _Nonnull)application;
- (void)applicationDidEnterBackground:(UIApplication * _Nonnull)application;
- (void)applicationWillEnterForeground:(UIApplication * _Nonnull)application;
- (void)applicationDidBecomeActive:(UIApplication * _Nonnull)application;
- (void)applicationWillTerminate:(UIApplication * _Nonnull)application;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class MKPointAnnotation;
@class MKMapView;

SWIFT_CLASS("_TtC8OnTheMap29ConfirmLocationViewController")
@interface ConfirmLocationViewController : UIViewController <MKMapViewDelegate>
@property (nonatomic, readonly, strong) MKPointAnnotation * _Nonnull annotation;
@property (nonatomic, weak) IBOutlet MKMapView * _Null_unspecified mapView;
- (void)viewWillAppear:(BOOL)animated;
- (void)setAnnotations;
- (IBAction)cancelPressed:(id _Nonnull)sender;
- (IBAction)finishPressed:(id _Nonnull)sender;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIImageView;
@class UILabel;

SWIFT_CLASS("_TtC8OnTheMap19LoginViewController")
@interface LoginViewController : UIViewController
@property (nonatomic, strong) UIActivityIndicatorView * _Nonnull activityIndicator;
@property (nonatomic, weak) IBOutlet UIImageView * _Null_unspecified loginImageView;
@property (nonatomic, weak) IBOutlet UIButton * _Null_unspecified loginButton;
@property (nonatomic, weak) IBOutlet UITextField * _Null_unspecified usernameTextField;
@property (nonatomic, weak) IBOutlet UITextField * _Null_unspecified passwordTextField;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified usernameLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified passwordLabel;
- (void)viewDidLoad;
- (IBAction)loginPressed:(id _Nonnull)sender;
- (void)completeLogin;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface LoginViewController (SWIFT_EXTENSION(OnTheMap))
- (void)setUIEnabled:(BOOL)enabled;
@end

@protocol MKAnnotation;
@class MKAnnotationView;
@class UIControl;

SWIFT_CLASS("_TtC8OnTheMap17MapViewController")
@interface MapViewController : UIViewController <MKMapViewDelegate>
@property (nonatomic, strong) UIActivityIndicatorView * _Nonnull activityIndicator;
@property (nonatomic, weak) IBOutlet MKMapView * _Null_unspecified mapView;
@property (nonatomic, copy) NSArray<MKPointAnnotation *> * _Nonnull annotations;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (MKAnnotationView * _Nullable)mapView:(MKMapView * _Nonnull)mapView viewForAnnotation:(id <MKAnnotation> _Nonnull)annotation SWIFT_WARN_UNUSED_RESULT;
- (void)mapView:(MKMapView * _Nonnull)mapView annotationView:(MKAnnotationView * _Nonnull)view calloutAccessoryControlTapped:(UIControl * _Nonnull)control;
- (IBAction)logoutPressed:(id _Nonnull)sender;
- (IBAction)refreshPins:(id _Nonnull)sender;
- (IBAction)addLocationPressed:(id _Nonnull)sender;
- (void)setAnnotations;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSURLSession;

SWIFT_CLASS("_TtC8OnTheMap11ParseClient")
@interface ParseClient : NSObject
@property (nonatomic, strong) NSURLSession * _Nonnull session;
- (void)taskForGetManyLocationsWithMethod:(NSString * _Nonnull)method parameters:(NSDictionary<NSString *, id> * _Nonnull)parameters completionHandlerForGET:(void (^ _Nonnull)(id _Nullable, NSError * _Nullable))completionHandlerForGET;
- (void)taskForGetStudentLocationWithMethod:(NSString * _Nonnull)method parameters:(NSDictionary<NSString *, id> * _Nonnull)parameters completionHandlerForGetStudentLocationParse:(void (^ _Nonnull)(id _Nullable, NSError * _Nullable))completionHandlerForGetStudentLocationParse;
- (void)taskForPostStudentLocationWithMethod:(NSString * _Nonnull)method jsonBody:(NSDictionary<NSString *, id> * _Nonnull)jsonBody completionHandlerForPOST:(void (^ _Nonnull)(id _Nullable, NSError * _Nullable))completionHandlerForPOST;
- (void)taskForPutStudentLocationWithObjectId:(NSString * _Nonnull)objectId method:(NSString * _Nonnull)method jsonBody:(NSDictionary<NSString *, id> * _Nonnull)jsonBody completionHandlerForPutMethod:(void (^ _Nonnull)(id _Nullable, NSError * _Nullable))completionHandlerForPutMethod;
- (void)parseJSONObject:(NSData * _Nonnull)data completionHandlerForConvertData:(SWIFT_NOESCAPE void (^ _Nonnull)(id _Nullable, NSError * _Nullable))completionHandlerForConvertData;
+ (ParseClient * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




@interface ParseClient (SWIFT_EXTENSION(OnTheMap))
- (void)getMyObjectIDWithUniqueKey:(NSString * _Nonnull)uniqueKey completionHandlerForGetStudentLocation:(void (^ _Nonnull)(BOOL, NSString * _Nullable))completionHandlerForGetStudentLocation;
- (void)putStudentLocationWithUniqueKey:(NSString * _Nonnull)uniqueKey firstName:(NSString * _Nonnull)firstName lastName:(NSString * _Nonnull)lastName mapString:(NSString * _Nonnull)mapString mediaUrl:(NSString * _Nonnull)mediaUrl latitude:(double)latitude longitude:(double)longitude completionHandlerForPut:(void (^ _Nonnull)(BOOL, NSString * _Nullable))completionHandlerForPut;
- (void)postStudentLocationWithFirstName:(NSString * _Nonnull)firstName lastName:(NSString * _Nonnull)lastName mapString:(NSString * _Nonnull)mapString mediaURL:(NSString * _Nonnull)mediaURL latitude:(double)latitude longitude:(double)longitude completionHandlerForPostStudentLocation:(void (^ _Nonnull)(BOOL, NSString * _Nullable))completionHandlerForPostStudentLocation;
@end


SWIFT_CLASS("_TtC8OnTheMap13TableViewCell")
@interface TableViewCell : UITableViewCell
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITableView;

SWIFT_CLASS("_TtC8OnTheMap19TableViewController")
@interface TableViewController : UIViewController
@property (nonatomic, strong) UIActivityIndicatorView * _Nonnull activityIndicator;
@property (nonatomic, strong) IBOutlet UITableView * _Null_unspecified studentLocationsTableView;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (IBAction)refreshLocations:(id _Nonnull)sender;
- (IBAction)logoutPressed:(id _Nonnull)sender;
- (IBAction)addLocationPressed:(id _Nonnull)sender;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface TableViewController (SWIFT_EXTENSION(OnTheMap)) <UITableViewDataSource, UITableViewDelegate>
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


SWIFT_CLASS("_TtC8OnTheMap13UdacityClient")
@interface UdacityClient : NSObject
@property (nonatomic, strong) NSURLSession * _Nonnull session;
@property (nonatomic, copy) NSString * _Nullable sessionID;
- (void)taskForPOSTSessionWithEmail:(NSString * _Nonnull)email password:(NSString * _Nonnull)password completionHandlerForPostSession:(void (^ _Nonnull)(id _Nullable, NSError * _Nullable))completionHandlerForPostSession;
- (void)taskForGETPublicUserDataWithMethod:(NSString * _Nonnull)method uniqueKey:(NSString * _Nonnull)uniqueKey completionHandlerForGetPublicUserData:(void (^ _Nonnull)(id _Nullable, NSError * _Nullable))completionHandlerForGetPublicUserData;
- (void)taskForDeleteSessionWithSession:(NSString * _Nonnull)session completionHandlerForTaskForDelete:(void (^ _Nonnull)(id _Nullable, NSError * _Nullable))completionHandlerForTaskForDelete;
- (void)parseJSONObject:(NSData * _Nonnull)data completionHandlerForConvertData:(SWIFT_NOESCAPE void (^ _Nonnull)(id _Nullable, NSError * _Nullable))completionHandlerForConvertData;
+ (UdacityClient * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface UdacityClient (SWIFT_EXTENSION(OnTheMap))
- (void)authenticateUserWithEmail:(NSString * _Nonnull)email password:(NSString * _Nonnull)password completionHandlerForAuthenticateUser:(void (^ _Nonnull)(BOOL, NSString * _Nullable))completionHandlerForAuthenticateUser;
- (void)getUdacityPublicUserDataWithUniqueKey:(NSString * _Nonnull)uniqueKey completionHandlerForGetPublicUserData:(void (^ _Nonnull)(BOOL, NSString * _Nullable))completionHandlerForGetPublicUserData;
@end



SWIFT_MODULE_NAMESPACE_POP
#pragma clang diagnostic pop
